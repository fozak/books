commit 274e78ffee8362e3e7b15fb556e8e43c9b1d47d0
Author: fozak <i771468@gmail.com>
Date:   Tue Aug 5 19:19:26 2025 -0400

    x

diff --git a/fyo/demux/config.ts b/fyo/demux/config.ts
index 04c78497..5f2aa7f0 100644
--- a/fyo/demux/config.ts
+++ b/fyo/demux/config.ts
@@ -1,12 +1,20 @@
 import { ConfigMap } from 'fyo/core/types';
 import type { IPC } from 'main/preload';
 
+// We declare 'ipc' globally only if running in Electron with preload exposing it.
+// In browser, 'ipc' is undefined and won't be used.
+declare const ipc: IPC | undefined;
+
 export class Config {
   config: Map<string, unknown> | IPC['store'];
+
   constructor(isElectron: boolean) {
-    this.config = new Map();
-    if (isElectron) {
+    if (isElectron && typeof ipc !== 'undefined' && ipc?.store) {
+      // Electron mode with IPC store available
       this.config = ipc.store;
+    } else {
+      // Browser mode or Electron without ipc store fallback to Map
+      this.config = new Map();
     }
   }
 
@@ -26,3 +34,4 @@ export class Config {
     this.config.delete(key);
   }
 }
+
diff --git a/rg b/rg
new file mode 100644
index 00000000..e69de29b
diff --git a/src/initFyo.ts b/src/initFyo.ts
index af0452c3..daab2ea6 100644
--- a/src/initFyo.ts
+++ b/src/initFyo.ts
@@ -1,8 +1,12 @@
 import { Fyo } from 'fyo';
+import { Fyo } from 'fyo';
+import { detectEnvironment } from 'utils/env'; // Your env detection utility
+
+const env = detectEnvironment();
 
-/**
- * Global fyo: this is meant to be used only by the app. For
- * testing purposes a separate instance of fyo should be initialized.
- */
+export const fyo = new Fyo({
+  isTest: false,
+  isElectron: env.isElectron,  // set dynamically based on environment
+  // optionally pass forceMode or apiUrl if you want to override
+});
 
-export const fyo = new Fyo({ isTest: false, isElectron: true });
